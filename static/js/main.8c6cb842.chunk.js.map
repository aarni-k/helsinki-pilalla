{"version":3,"sources":["components/SelectServiceType.js","components/serviceclient.js","components/SelectStatus.js","components/SelectTimeRange.js","components/regexclient.js","components/FeedbackStory.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["SelectServiceType","state","serviceList","btnSelectService","e","preventDefault","target","value","_this","props","callback","callbackid","service_code","serviceCodeString","id","_this2","this","fetch","then","response","statusText","json","data","setState","_this3","serviceItems","map","values","react_default","a","createElement","Button_default","variant","key","onClick","service_name","Fragment","Component","SelectStatus","btnClick","console","log","status","SelectTimeRange","dateSelector","timeRange","end_date","start_date","numberOfMonthsToGoBack","Date","toISOString","setMonth","getMonth","filterWord","searchterm","regExSearchTerm","RegExp","selectedFeedback","item","test","description","position","search","whitespace","substr","undefined","push","FeedbackStory","open","storyItem","length","title","concat","substring","recievedDate","requested_datetime","replyDate","updated_datetime","stringEnder","status_notes","aria-controls","aria-expanded","Collapse_default","in","className","lat","long","href","rel","media_url","Image_default","src","width","height","rounded","agency_responsible","Main","serviceCode","startDate","endDate","timeRangeString","searchTerm","progress","progressLabel","v√§litulokset","showResults","searchTerms","getAllServiceRequests","serviceRequests","callbackFunction","btnSearch","filterChanged","selectedServiceCode","selectedStatus","selectedTimeRange","selectedSearchTerm","selectedSearchResults","feedbackStories","service_request_id","components_FeedbackStory","popover","Popover_default","OverlayTrigger_default","trigger","placement","overlay","ProgressBar_default","now","label","Form_default","Group","Control","size","type","placeholder","onChange","components_SelectServiceType","components_SelectStatus","components_SelectTimeRange","App","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c6cb842.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { getServiceList } from './serviceclient';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// Component returns Buttons to select the specific service code/type\r\n\r\nclass SelectServiceType extends Component {\r\n    state = { serviceList: [] }\r\n\r\n    componentDidMount() {\r\n        this.props.callback({ callbackid: \"servicecode\", service_code: \"notUsed\" })\r\n        getServiceList().then(data => {\r\n            this.setState({ serviceList: data })\r\n        })\r\n    }\r\n    btnSelectService = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.value === \"selectAll\") { return this.props.callback({ callbackid: \"servicecode\", service_code: \"notUsed\", serviceCodeString: \"notUsed\" }) }\r\n        this.props.callback({ callbackid: \"servicecode\", service_code: e.target.value, serviceCodeString: e.target.id })\r\n    }\r\n\r\n    render() {\r\n        const serviceItems = this.state.serviceList.map(\r\n            (values) => {\r\n                return <Button variant=\"outline-light\" key={values.service_code} onClick={this.btnSelectService} id={values.service_name} value={values.service_code}>{values.service_name}</Button>\r\n            }\r\n        )\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Button variant=\"outline-light\" value=\"selectAll\" onClick={this.btnSelectService}>Kaikki</Button>\r\n                {serviceItems}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectServiceType;","// GET list of service_codes from Open311 API\r\nexport function getServiceList() {\r\n    return fetch(\"https://asiointi.hel.fi/palautews/rest/v1/services.json?locale=fi\")\r\n        .then(function (response) {\r\n            if (response.statusText === \"400\") {\r\n                // console.log(response, \"error, getServiceList\")\r\n                return \"Status 400 - General server error\"\r\n            }\r\n            else {\r\n                // console.log(response,\"not error, getServiceList\")\r\n                return response.json();\r\n            }\r\n        }\r\n        )\r\n}\r\n\r\n// GET all service requests with specific service_code from Open311 API\r\nexport function getAllServiceRequests(status, serviceCode, startDate, endDate) {\r\n\r\n    status = \"&status=\" + status\r\n\r\n    if (serviceCode !== \"notUsed\") { serviceCode = \"&service_code=\" + serviceCode }\r\n    if (startDate !== \"notUsed\" && endDate !== \"notUsed\") {\r\n        startDate = \"&start_date=\" + startDate\r\n        endDate = \"&end_date=\" + endDate\r\n    }\r\n\r\n\r\n\r\n    var apiBase = \"https://asiointi.hel.fi/palautews/rest/v1/requests.json?locale=fi\";\r\n    var searchTerms = status;\r\n\r\n    if (serviceCode !== \"notUsed\") { searchTerms += serviceCode }\r\n    if (startDate !== \"notUsed\" && endDate !== \"notUsed\") { searchTerms += startDate + endDate }\r\n\r\n    // console.log(apiBase + searchTerms,\"Search Url\")\r\n    return fetch(apiBase + searchTerms)\r\n        .then(function (response) {\r\n            return response.json();\r\n        }\r\n        )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// Component renders a selector Button for open/closed search term\r\n\r\nclass SelectStatus extends Component {\r\n\r\n    btnClick = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.value,\"Status btn value!\")\r\n        this.props.callback({callbackid:\"status\", status:e.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button variant=\"outline-light\" value=\"open\" onClick={this.btnClick}>Avoinna</Button>\r\n                <Button variant=\"outline-light\" value=\"closed\" onClick={this.btnClick}>Suljettu</Button>  \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectStatus;","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// Component renders selectors for the search time-range\r\n// TODO - Make more relevant time-range options (previous years) to utilize the API more\r\n\r\nclass SelectTimeRange extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.callback({callbackid:\"timerange\",end_date:\"notUsed\", start_date:\"notUsed\", timeRange:\"notUsed\"})\r\n    }\r\n\r\n    dateSelector = (e) => {\r\n        e.preventDefault();     \r\n        var timeRange = \"notUsed\"\r\n        if (e.target.value === \"NoDate\"){\r\n        return this.props.callback({callbackid:\"timerange\",end_date:\"notUsed\", start_date:\"notUsed\", timeRange})\r\n        }\r\n        if (e.target.value === \"30\") {var numberOfMonthsToGoBack = 1; timeRange = \"Edelliset 30 p√§iv√§√§\"}\r\n        if (e.target.value === \"60\") { numberOfMonthsToGoBack = 2; timeRange = \"Edelliset 60 p√§iv√§√§\"}\r\n        if (e.target.value === \"90\") { numberOfMonthsToGoBack = 3; timeRange = \"Edelliset 90 p√§iv√§√§\"}\r\n\r\n        var end_date = new Date();\r\n        end_date = end_date.toISOString();\r\n\r\n        var start_date = new Date();\r\n        start_date.setMonth(start_date.getMonth() - numberOfMonthsToGoBack);\r\n        start_date = start_date.toISOString();\r\n\r\n        this.props.callback({callbackid:\"timerange\",end_date,start_date, timeRange})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button variant=\"outline-light\" value=\"NoDate\" onClick={this.dateSelector}>Ei aikav√§li√§</Button>\r\n                <Button variant=\"outline-light\" value=\"30\" onClick={this.dateSelector}>Edelliset 30 p√§iv√§√§</Button>\r\n                <Button variant=\"outline-light\" value=\"60\" onClick={this.dateSelector}>Edelliset 60 p√§iv√§√§</Button>\r\n                <Button variant=\"outline-light\" value=\"90\" onClick={this.dateSelector}>Edelliset 90 p√§iv√§√§</Button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectTimeRange;","// filterWord takes in the result data and the search term from the search bar\r\nexport function filterWord(data, searchterm) {\r\n   \r\n    // regExSearchTerm is the given search term with i-flag to make search case-insensitive\r\n    var regExSearchTerm = new RegExp(searchterm, \"i\")\r\n\r\n    var selectedFeedback = [];\r\n\r\n    // Function returns an array of results that contain the search term\r\n    // TODO - Add search options regarding specific topics\r\n\r\n    var feedbackFilter = data.map((item) => {\r\n        if (regExSearchTerm.test(item.description)) {\r\n            var position = item.description.search(regExSearchTerm)\r\n            var whitespace = item.description.substr(position).search(whitespace)\r\n            if (whitespace === -1) { whitespace = undefined }\r\n            selectedFeedback.push(item)\r\n            return item.description;\r\n        }\r\n    }\r\n    )\r\n    console.log(selectedFeedback, \"Seleted results\")\r\n    return selectedFeedback;\r\n\r\n}\r\n// regExPortal function was used to test out the regEx in content search\r\n// export function regExPortal(data) {\r\n//     // Search term \r\n//     var searchTerm = /kii/i\r\n//     // Finds the next whitespace\r\n//     var whitespace = /\\s{1,1}/\r\n//     // Test array in finnish to play around with regEx\r\n//     var arrayA = [\r\n//         { a: \"Kiitos kaikille avusta.\" },\r\n//         { a: \"Aina v√§lill√§ tarvitaan kiitosta\" },\r\n//         { a: \"Kuka sanoi kiitos sinulle metrossa?\" },\r\n//         { a: \"Seuraava sana on KIITOS\" },\r\n//         { a: \"KIITOS oli ensimm√§inen sana\" },\r\n//         { a: \"Kiitoksia sinulle\" }]\r\n\r\n//     // Goes through the array to uses regEx to each item\r\n//     // returns returns matching array regDemo\r\n//     var regDemo = arrayA.map((item => {\r\n//         // If item contains searchTerm = true\r\n//         if (searchTerm.test(item.a)) {\r\n\r\n//             // Position of index of the searchTerm in string\r\n//             var position = item.a.search(searchTerm)\r\n\r\n//             // Makes a substring starting from the index of position and searches position of the next whitespace\r\n//             var whitespace = item.a.substr(position).search(whitespace)\r\n\r\n//             // If whitespace = -1 -> string ends so this must be undefined\r\n//             if (whitespace === -1) { whitespace = undefined }\r\n\r\n//             // Creates a new string by using positions of the found searchTerm and next whitespace (or undefined if it is the last word)\r\n//             var newString = item.a.substr(item.a.search(searchTerm), whitespace)\r\n\r\n//             // Own notes in Finnish\r\n//             console.log(item.a, \"<-\", searchTerm + \" regEx lause, sana l√∂ytyi indexill√§\", position, \"seuraavaan whitespaceen asti teksti:\", newString)\r\n//             console.log(whitespace, \"whitespace result\")\r\n//             // Returns the string, if nothing found the result is undefined\r\n//             return newString\r\n//         }\r\n//         // console.log(regDemo)\r\n//     }))\r\n\r\n//     //prints the regDemo to console after running\r\n//     console.log(regDemo, \"<- RegDemo funktion j√§lkeen\")\r\n// }","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\n// Component renders the feedback-specific information in a collapse element. \r\n// Content varies by the status of the feedback.\r\n// TODO - Do some elegant styling for the content\r\n// TODO - Add location data to make some comments more reasonable\r\n\r\nclass FeedbackStory extends Component {\r\n  state = { open: false }\r\n\r\n  componentDidMount() {\r\n    this.setState({ open: false })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { open } = this.state;\r\n    if (this.props.storyItem.description.length > 120) {\r\n      var title = `${this.props.storyItem.description.substring(0, 120)}...`\r\n    }\r\n    else { title = this.props.storyItem.description }\r\n\r\n    var recievedDate = this.props.storyItem.requested_datetime.substring(8, 10) + \".\" + this.props.storyItem.requested_datetime.substring(5, 7) + \".\" + this.props.storyItem.requested_datetime.substring(0, 4)\r\n\r\n    var replyDate = (this.props.storyItem.status === \"closed\") ? this.props.storyItem.updated_datetime.substring(8, 10) + \".\" + this.props.storyItem.updated_datetime.substring(5, 7) + \".\" + this.props.storyItem.updated_datetime.substring(0, 4) : \"\"\r\n\r\n    var stringEnder = (this.props.storyItem.status === \"closed\") ? this.props.storyItem.status_notes.search(/yst√§v√§llisin/i) : \"\"\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Button\r\n          variant=\"outline-light\"\r\n          onClick={() => this.setState({ open: !open })}\r\n          aria-controls=\"example-collapse-text\"\r\n          aria-expanded={open}\r\n        >\r\n          {title}\r\n        </Button>\r\n        <Collapse in={this.state.open}>\r\n          <div id=\"example-collapse-text\">\r\n          <hr/>\r\n            <h5>Palautteen p√§iv√§ys: {recievedDate}</h5>\r\n            <p className=\"StoryDescription\">{this.props.storyItem.description}</p>\r\n            {(this.props.storyItem.lat !== null & this.props.storyItem.long !== null) ? <div className=\"StoryGmapsLink\"> <Button variant=\"outline-light\" href={`https://www.google.com/maps/search/?api=1&query=${this.props.storyItem.lat},${this.props.storyItem.long}`} target=\"_blank\" rel=\"noopener noreferrer\">Avaa palautteen sijainti Google Mapsissa</Button> </div>: \"\"}\r\n            \r\n            {(this.props.storyItem.media_url !== null) ? <div className=\"StoryMediaEmbed\"><Image src={this.props.storyItem.media_url} width=\"33%\" height=\"33%\" rounded /> </div> : \"\"}\r\n            \r\n            {(this.props.storyItem.status === \"closed\") ? <h5>Vastauksen p√§iv√§ys: {replyDate}</h5> : <h6>Vastaava yksikk√∂: {this.props.storyItem.agency_responsible}</h6>}\r\n            {(this.props.storyItem.status === \"closed\") ? <p className=\"StoryDescription\">{this.props.storyItem.status_notes.substring(0, stringEnder)}</p> : \"\"}\r\n            {(this.props.storyItem.status === \"closed\") ? <h6>Vastaava yksikk√∂: {this.props.storyItem.agency_responsible}</h6> : \"\"}\r\n\r\n          </div>\r\n        </Collapse>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackStory;","import React, { Component } from 'react';\r\nimport SelectServiceType from './SelectServiceType';\r\nimport SelectStatus from './SelectStatus';\r\nimport SelectTimeRange from './SelectTimeRange';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form';\r\nimport { getAllServiceRequests } from './serviceclient';\r\nimport { filterWord } from './regexclient';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport FeedbackStory from './FeedbackStory';\r\nimport ProgresBar from 'react-bootstrap/ProgressBar';\r\n\r\n// Main page compiles all the components together\r\n// TODO - Make ProgressBar more relevant\r\n// TODO - Create better categorization of the search options\r\n// TODO - Make the page more pleasent to the eye (it's so dark)\r\n// TODO - Make these selectors into lambdas/ternieries in the future // Use ToggleButtons\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        status: \"closed\",\r\n        serviceCode: \"notUsed\",\r\n        serviceCodeString: \"notUsed\",\r\n        startDate: \"notUsed\",\r\n        endDate: \"notUsed\",\r\n        timeRangeString: \"notUsed\",\r\n        searchTerm: \"\",\r\n        progress: 100,\r\n        progressLabel: \"Valmista\",\r\n        v√§litulokset: []\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.showResults();\r\n    }\r\n    // showResults sends out GET to API and then send the data to regEx function to filter out the results\r\n    showResults = () => {\r\n        this.setState({ progress: 33, progressLabel: \"Soitellaan kaupungille\" })\r\n        getAllServiceRequests(this.state.status,\r\n            this.state.serviceCode,\r\n            this.state.startDate,\r\n            this.state.endDate)\r\n            .then((data) => {\r\n                this.setState({ progress: 66, progressLabel: \"Putsataan vastauksia\" })\r\n                var searchterm = this.state.searchTerm\r\n                this.setState({ serviceRequests: filterWord(data, searchterm), progress: 100, progressLabel: \"Valmis!\" })\r\n\r\n            })\r\n\r\n\r\n    }\r\n\r\n    callbackFunction = (data) => {\r\n        // console.log(data, \"Callback fired, Main.js\")\r\n        if (data.callbackid === \"status\") {\r\n            // console.log(data, \"status incoming\")\r\n            this.setState({ status: data.status })\r\n        }\r\n        if (data.callbackid === \"servicecode\") {\r\n            // console.log(data, \"service_request id incoming\")\r\n            this.setState({ serviceCode: data.service_code, serviceCodeString: data.serviceCodeString })\r\n        }\r\n        if (data.callbackid === \"timerange\") {\r\n            // console.log(data, \"timerange incoming\")\r\n            this.setState({ startDate: data.start_date, endDate: data.end_date, timeRangeString: data.timeRange })\r\n        }\r\n    }\r\n\r\n    btnSearch = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ progress: 0, progressLabel: \"Aloitetaan haku\" })\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    filterChanged = (e) => {\r\n        this.setState({ searchTerm: e.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n       \r\n        var selectedServiceCode = \"\"\r\n        if (this.state.serviceCode === \"notUsed\") { selectedServiceCode = \"Kaikki palvelut\" }\r\n        else { selectedServiceCode = this.state.serviceCodeString }\r\n\r\n        var selectedStatus = \"\"\r\n        if (this.state.status === \"closed\") { selectedStatus = \"Suljettu\" }\r\n        else { selectedStatus = \"Avoinna\" }\r\n\r\n        var selectedTimeRange = \"\"\r\n        if (this.state.timeRangeString === \"notUsed\") { selectedTimeRange = \"Ei aikav√§li√§\" }\r\n        else { selectedTimeRange = this.state.timeRangeString }\r\n\r\n        var selectedSearchTerm = \"\"\r\n        if (this.state.searchTerm === \"\") selectedSearchTerm = \"Suodatetaan palaute, josta l√∂ytyy merkkijono\"\r\n        else { selectedSearchTerm = `Suodatetaan palaute, jossa esiintyy annettu merkkijono \"${this.state.searchTerm}\"` }\r\n\r\n        var selectedSearchResults = \"\"\r\n        if (this.state.serviceRequests === undefined) { selectedSearchResults = \"Ladataan sivustoa\" }\r\n        if (this.state.serviceRequests !== undefined && this.state.serviceRequests.length !== 0) selectedSearchResults = `Hakutuloksia yhteens√§ ${this.state.serviceRequests.length}`\r\n        if (this.state.serviceRequests !== undefined && this.state.serviceRequests.length === 0) { selectedSearchResults = \"Ei hakutuloksia\" }\r\n\r\n\r\n        // TODO - See if this could be done with the first IF statement\r\n        if (this.state.serviceRequests !== undefined) {\r\n\r\n            var feedbackStories = this.state.serviceRequests.map((value) => {\r\n                if (value !== undefined && value.description !== \"\") {\r\n                    return (\r\n                        <div className=\"FeedBackItem\" key={value.service_request_id}>\r\n                            <FeedbackStory storyItem={value} />\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n\r\n        // PopOver to display Info Button text\r\n        const popover = (\r\n            <Popover id=\"popover-basic\" title=\"HELSINKI-PILALLA\">\r\n                <p>Sivusto on tehty harjoitusmieless√§ k√§ytt√§en hyv√§ksi <a href=\"https://dev.hel.fi/apis/open311/\" target=\"_blank\" rel=\"noopener noreferrer\">dev.hel.fi Open311</a>  API:a.\r\n                    Hakutoiminto on toteutettu regEx:ll√§ ja kaupungin vastauksista on poistettu\r\n                    kaikki teksti \"Yst√§v√§llisin terveisin\" kohdan j√§lkeen. API palauttaa joko 200 ensimm√§ist√§ tulosta\r\n                    tai, jos valittuna, tulokset maksimissaan 90 p√§iv√§n ajalta. Palvelulistaus on rakennettu API:n pohjalta.\r\n                    Jatkossa on tarkoitus lis√§t√§ erilaisia valmiita hakuja (esimerkiksi vuosihaut) sek√§ aihesuodattimia\r\n                    kuten roskakorit, siirtokehoitukset jne. L√§hdekoodi l√∂ytyy <a href=\"https://github.com/aarni-k/helsinki-pilalla/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHubista</a>\r\n                    <br /><br />\r\n                    <list>\r\n                        <strong>Toteutus</strong>\r\n                        <ul>\r\n                            <li>ReactJS & React-Bootstrap</li>\r\n                            <li>dev.hel.fi Open311 API</li>\r\n                            <li>JavaScript RegEx</li>\r\n                        </ul>\r\n                    </list>\r\n                    <strong>-Aarni</strong></p>\r\n            </Popover>\r\n        );\r\n\r\n        const MoreInfo = () => (\r\n            <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\r\n                <Button variant=\"outline-light\">Info</Button>\r\n            </OverlayTrigger>\r\n        );\r\n\r\n\r\n        return (\r\n            <div className=\"FeedBackStories\">\r\n                <div className=\"TopContent\">\r\n                    <h6>Katsele kaupungin palautteita - Lis√§tietoa info-napin takana!</h6>\r\n                    <div className=\"SearchButton\">\r\n                        <Button variant=\"outline-light\" onClick={this.btnSearch} value={this.state.searchTerm}>Hae!</Button>\r\n                        &nbsp;\r\n                        <MoreInfo />\r\n                    </div>\r\n                    <div className=\"SearchBar\">\r\n                        <ProgresBar variant=\"dark\" now={this.state.progress} label={this.state.progressLabel} />\r\n                        <br />\r\n                        <h4>{selectedSearchTerm}</h4>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Suodatin / Kokeile kiit, niin l√∂yd√§t kiitokset\" onChange={this.filterChanged} />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"InnerTopContent\">\r\n                        <div className=\"ServiceType\">\r\n                            <h4>Valittuna: {selectedServiceCode} </h4>\r\n                            <SelectServiceType callback={this.callbackFunction} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"InnerTopContent\">\r\n                        <div className=\"SelectStatus\">\r\n                            <h4>Valittuna: {selectedStatus}</h4>\r\n                            <SelectStatus callback={this.callbackFunction} />\r\n                        </div>\r\n                        <div className=\"TimeRange\">\r\n                            <h4>Valittuna: {selectedTimeRange}</h4>\r\n                            <SelectTimeRange callback={this.callbackFunction} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"FeedBackStories\">\r\n                    <h4>{selectedSearchResults}</h4>\r\n                    {feedbackStories}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Main;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Main from './components/Main';\r\n\r\nclass App extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n         <h1>HELSINKI-PILALLA</h1>\r\n        </header>\r\n        \r\n         \r\n       \r\n        <Main/>\r\n        <div className=\"BottomFiller\">\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}